
pipeline {
    agent any
            stages {
            stage('SCM checkout') {
                  steps {
                        git url: 'https://github.com/Nouman72884/flask-examples.git'
                        }
             }
             stage('preparation') {
                   steps {
                         sh 'sudo apt-get install python-pip -y'
                         sh 'pip install wheel'
                         }
              }
              stage('preparation 2') {
                    steps {
                          sh 'pip wheel  -r requirements.txt'
                          }
               }
              stage('transfer artifacts') {
                    steps {
                          sshPublisher(
                          publishers:
                          [sshPublisherDesc
                          (configName: 'webserver',
                           transfers: [sshTransfer(
                           excludes: 'jenkinsfile,pipeline.groovy',
                           execCommand: 'sudo apt-get install python-pip -y;cd /tmp/tmp/;pip install *.whl;sudo apt install python3-flask -y;sudo apt-get install at;sudo systemctl start atd;sudo systemctl enable atd;cd 01-hello-world/;export FLASK_APP=hello.py;killall flask;echo "flask run --host=0.0.0.0" | at -m now',
                           execTimeout: 35000,
                           flatten: false,
                           makeEmptyDirs: true,
                           noDefaultExcludes: false,
                           patternSeparator: '[, ]+',
                           remoteDirectory: '/tmp',
                           remoteDirectorySDF: false,
                           removePrefix: '', sourceFiles: '**/*')],
                           usePromotionTimestamp: false,
                           useWorkspaceInPromotion: false,
                           verbose: true)])
                          }
              }
              }
}
